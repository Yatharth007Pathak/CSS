body {
    display: flex;                           /* Flexbox layout for centering */
    justify-content: center;                  /* Horizontally centers the content */
    align-items: center;                      /* Vertically centers the content */
    height: 100vh;                            /* Makes body take full viewport height */
    background-color: #f0f0f0;                /* Light gray background color */
    margin: 0;                                /* Removes default margin */
}

/* Base styles for the ball */
.ball {
    width: 50px; /* Width of the ball */
    height: 50px; /* Height of the ball */
    background-color: coral; /* Background color */
    border-radius: 50%; /* Circular shape */
    position: relative; /* Required for animation positioning */
    animation: bounce 1s ease infinite; /* Bounce animation */
}

/* Keyframes for bounce animation */
@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0); /* Start and end at original position */
    }
        40% {
            transform: translateY(-150px); /* Moves up */
    }
        60% {
            transform: translateY(-75px); /* Moves down */
    }
}

/*
Explanation

Ball Styling:
The .ball class creates a circular div by setting its width and height to 50px and applying border-radius: 50%.
The position: relative property enables positioning adjustments through transform without affecting other elements.

Animation:
The animation property applies the bounce animation using the bounce keyframes.
It lasts 1 second (1s) with an ease timing function, giving a natural bounce feel.
infinite allows the ball to keep bouncing without stopping.

Keyframes:
The @keyframes bounce defines the bounce motion:
At 0%, 20%, 50%, 80%, and 100%, the ball is in its starting position.
At 40%, the ball reaches a peak height of -150px, simulating a jump.
At 60%, the ball bounces to -75px, capturing the effect of gravity pulling it back down.
*/